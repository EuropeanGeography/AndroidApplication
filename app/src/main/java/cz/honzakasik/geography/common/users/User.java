package cz.honzakasik.geography.common.users;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import cz.honzakasik.geography.common.quiz.question.DifficultyLevel;

@DatabaseTable(tableName = "users")
public class User {

    @DatabaseField(generatedId = true, canBeNull = false)
    private Integer userId;

    @DatabaseField(canBeNull = false)
    private String nickName;

    @DatabaseField(canBeNull = false)
    private DifficultyLevel difficultyLevel;

    /***
     * For ORMlite purpose
     */
    private User() {}

    private User(Builder builder) {
        this.userId = builder.userId;
        this.nickName = builder.userNickname;
        this.difficultyLevel = builder.difficultyLevel;
    }

    /**
     * Get unique id of player
     */
    public Integer getUserId() {
        return userId;
    }

    public String getNickName() {
        return nickName;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public void setNickName(String nickName) {
        this.nickName = nickName;
    }

    public void setDifficultyLevel(DifficultyLevel difficultyLevel) {
        this.difficultyLevel = difficultyLevel;
    }

    /**
     * Get difficulty level which will be propagated to played games
     * @return difficulty level set to player
     */
    public DifficultyLevel getDifficultyLevel() {
        return difficultyLevel;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        User user = (User) o;

        if (userId != null ? !userId.equals(user.userId) : user.userId != null) return false;
        return nickName != null ? nickName.equals(user.nickName) : user.nickName == null;

    }

    @Override
    public int hashCode() {
        int result = userId != null ? userId.hashCode() : 0;
        result = 31 * result + (nickName != null ? nickName.hashCode() : 0);
        return result;
    }

    public static class Builder {

        private Integer userId;
        private String userNickname;
        private DifficultyLevel difficultyLevel;

        public Builder() {}

        /**
         * Set user id, deprecated since the id is now autogenerated
         */
        public Builder userId(Integer userId) {
            this.userId = userId;
            return this;
        }

        /**
         * Set nickname for player
         */
        public Builder userNickname(String userNickname) {
            this.userNickname = userNickname;
            return this;
        }

        /**
         * Set difficulty level for player
         */
        public Builder difficultyLevel(DifficultyLevel difficultyLevel) {
            this.difficultyLevel = difficultyLevel;
            return this;
        }

        public User build() {
            return new User(this);
        }
    }


    @Override
    public String toString() {
        return "User{" +
                "userId=" + userId +
                ", nickName='" + nickName + '\'' +
                ", difficultyLevel=" + difficultyLevel +
                '}';
    }
}
